<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc-mysql.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource"
		init-method="init" destroy-method="close">
		<property name="className"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="uniqueName" value="jdbc/cdpProject" />
		<property name="maxPoolSize" value="5" />
		<property name="allowLocalTransactions" value="true" />
		<property name="driverProperties">
			<props>
				<prop key="URL">${database.url}</prop>
				<prop key="user">${database.username}</prop>
				<prop key="password">${database.password}</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jtaTransactionManager" ref="transactionManager" />
		<property name="packagesToScan">
			<list>
				<value>com.huangzb.test.model.hibernate</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<map>
				<entry key="hibernate.dialect" value="${hibernate.dialect}" />
				<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
				<entry key="hibernate.current_session_context_class" value="${hibernate.current_session_context_class}" />
				<entry key="hibernate.cache.provider_class" value="${hibernate.cache.provider_class}" />
			</map>
		</property>
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 1、在jta环境下，如果不使用 persistenceUnitName来指定jap的持久单元，在使用em.persist(obj)方法来保存数据时，不能将数据保存到数据库。 
			 2、但在指定了该参数之后，packagesToScan参数所指定的包路径下面的model将不会再被扫描到。
			 3、所以只能将所有的model类在persistence.xml文件中申明
		 -->
		<property name="persistenceUnitName" value="org.jbpm.jta" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${hibernate.dialect}" />
				<property name="showSql" value="${hibernate.show_sql}" />
				<property name="generateDdl" value="${generateDdl}" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
				<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
				<entry key="hibernate.transaction.manager_lookup_class"
					value="org.hibernate.transaction.BTMTransactionManagerLookup" />
			</map>
		</property>
	</bean>

	<bean id="btmConfig" factory-method="getConfiguration"
		class="bitronix.tm.TransactionManagerServices">
	</bean>

	<bean id="bitronixTransactionManager" factory-method="getTransactionManager"
		class="bitronix.tm.TransactionManagerServices" depends-on="btmConfig, dataSource"
		destroy-method="shutdown" />

	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="bitronixTransactionManager" />
		<property name="userTransaction" ref="bitronixTransactionManager" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:component-scan base-package="com.huangzb.test.*" />
</beans>